Traceback (most recent call last):
  File "/home/baris/Documents/uni/AAAsegmentor/src/main.py", line 34, in <module>
    main()
  File "/home/baris/Documents/uni/AAAsegmentor/src/main.py", line 27, in main
    train_single_epoch(model=model, optimizer=optimizer, train_loader=train_loader)
  File "/home/baris/Documents/uni/AAAsegmentor/src/training/train.py", line 16, in train_single_epoch
    outputs = model(img)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/monai/networks/nets/unet.py", line 311, in forward
    x = self.model(x)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/monai/networks/blocks/convolutions.py", line 314, in forward
    res: torch.Tensor = self.residual(x)  # create the additive residual from x
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 607, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 602, in _conv_forward
    return F.conv3d(
  File "/home/baris/.local/lib/python3.10/site-packages/monai/data/meta_tensor.py", line 249, in __torch_function__
    ret = super().__torch_function__(func, types, args, kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/_tensor.py", line 1121, in __torch_function__
    ret = func(*args, **kwargs)
RuntimeError: Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same
Traceback (most recent call last):
  File "/home/baris/Documents/uni/AAAsegmentor/src/main.py", line 34, in <module>
    main()
  File "/home/baris/Documents/uni/AAAsegmentor/src/main.py", line 27, in main
    train_single_epoch(model=model, optimizer=optimizer, train_loader=train_loader)
  File "/home/baris/Documents/uni/AAAsegmentor/src/training/train.py", line 16, in train_single_epoch
    outputs = model(img)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/monai/networks/nets/unet.py", line 311, in forward
    x = self.model(x)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/monai/networks/blocks/convolutions.py", line 314, in forward
    res: torch.Tensor = self.residual(x)  # create the additive residual from x
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 607, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 602, in _conv_forward
    return F.conv3d(
  File "/home/baris/.local/lib/python3.10/site-packages/monai/data/meta_tensor.py", line 249, in __torch_function__
    ret = super().__torch_function__(func, types, args, kwargs)
  File "/home/baris/.local/lib/python3.10/site-packages/torch/_tensor.py", line 1121, in __torch_function__
    ret = func(*args, **kwargs)
RuntimeError: Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same